{
  "name": "app-boilerplate",
  "version": "0.0.1",
  "description": "Node.js app boilerplate",
  "main": "index.js",
  "author": "dylanized",
  "license": "MIT",
  "dependencies": {
    "run-s -l": "^1.5.1"
  },
  "devDependencies": {
    "mocha": "^2.4.4",
    "unit.js": "^2.0.0"
  },
  "scripts": {
    "==BUILDING==": " ",
        "postinstall": "run-s -l bower:install build",
        "postupdate": "run-s -l bower-update build",
        "build": "npm run compile",
        "compile": "run-s -l css:compile js:compile",
        "css:compile": " ",
        "js:compile": " ",
        "bower:install": "bower install",
        "bower:update": "bower update",
	    "submodule:update": "rm -rf $npm_package_config_submodule_folder && git clone $npm_package_config_submodule_repo $npm_package_config_submodule_folder && rm -rf $npm_package_config_submodule_git",        
        "clean": "rm -rf tmp"
    "==WATCHING==": " ",
        "watch": "run-s -l css:watch js:watch server:watch",
        "css:watch": " ",
        "js:watch": " ",
        "server:watch": " ",
    "==RUNNING==": " ",
        "start": "node server.js",
        "build:start": "run-s -l build start",
        "watch:start": "run-s -l watch start",
        "dev": "run-s -l reload build watch:start",
        "stop": "run-s -l db:stop stopSQL",
    "==TESTING==": " ",
        "test": "mocha test/[^_]*.js --bail",
        "mocha": "mocha",
        "test:grep": "mocha --grep",
        "bin": "ls ./node_modules/.bin/",
    "==MongoDB==": " ",
        "db:create": " ",
        "db:import": "mongoimport -d $npm_package_config_db_database -c $npm_package_config_db_collection --file ",
        "db:seed": "mongoimport -d $npm_package_config_db_database -c $npm_package_config_db_collection --file $npm_package_config_db_seed",
        "db:drop": "mongo legislators_development --eval 'db.dropDatabase()'",
        "db:reload": "run-s -l db:drop db:seed",
        "db:export": " ",
        "db:start": " ",
        "db:stop": " ",
        "db:destroy": " ",
    "==MySQL==": " ",
        "sql:create": "echo \"CREATE DATABASE IF NOT EXISTS $npm_package_config_sql_database\" | mysql -u $npm_package_config_sql_user -p$npm_package_config_sql_password",
        "sql:seed": "mysql -u $npm_package_config_sql_user -p$npm_package_config_sql_password $npm_package_config_sql_database < $npm_package_config_sql_seed",
    	"sql:reseed": "run-s -l sql:empty sql:seed",
    	"sql:empty": "mysqldump -u$npm_package_config_sql_user -p$npm_package_config_sql_password --add-drop-table --no-data $npm_package_config_sql_database | grep ^DROP | mysql -u$npm_package_config_sql_user -p$npm_package_config_sql_password $npm_package_config_sql_database",        
        "sql:drop": "echo \"DROP DATABASE IF EXISTS $npm_package_config_sql_database\" | mysql -u $npm_package_config_sql_user -p$npm_package_config_sql_password",
        "sql:load": "run-s -l sql:create sql:seed",
        "sql:reload": "run-s -l sql:drop sql:load",
        "sql:export": " ",
        "sql:start": " ",
        "sql:stop": " ",
        "sql:destroy": " ",
    "==UNINSTALL==": " ",
        "uninstall": "run-s -l db:destroy sql:destroy clean",
        "clean": "rm -rf tmp/*.*",
    "==OTHER==": " ",
        "cron": "sh scripts/cron.sh",
    	"archive": "node scripts/archive.js"
  },
  "config": {
    "submodule": {
      "repo": "git@github.com:dylanized/foo.git",
      "folder": "foo",
      "git": "foo/.git"
    },  
    "db": {
      "database": "exampleDatabase",
      "collection": "exampleCollection",
      "seed": "/files/seed.json"
    },
    "sql": {
	  "host": "localhost",
      "user": "root",
      "password": "root",
      "database": "database_name",
      "seed": "/files/seed.sql"
    }
  }
}
