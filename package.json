{
  "name": "app-boilerplate",
  "version": "0.0.1",
  "description": "Node.js app boilerplate",
  "main": "index.js",
  "author": "dylanized",
  "license": "MIT",
  "dependencies": {
    "dotenv": "^2.0.0",
    "run-s -l": "^1.5.1"
  },
  "devDependencies": {
    "mocha": "^2.4.4",
    "unit.js": "^2.0.0"
  },
  "scripts": {
    "==BUILDING==": " ",
    "postinstall": "run-s -l bower:install build",
    "postupdate": "run-s -l bower-update build",
    "build": "npm run compile",
    "compile": "run-s -l css:compile js:compile",
    "css:compile": " ",
    "js:compile": " ",
    "==INSTALLING==": " ",    
    "bower:install": "bower install",
    "bower:update": "bower update",
    "composer:build": "run-s -l composer:update composer:install",
    "composer:update": "composer update",
    "composer:install": "composer install",
    "npm:install": "npm install",
    "modules:install": "run-s -l composer:build npm:install bower:install", 
    "==OTHER==": " ",       
    "submodule:update": "rm -rf $npm_package_config_submodule_folder && git clone $npm_package_config_submodule_repo $npm_package_config_submodule_folder && rm -rf $npm_package_config_submodule_git",
    "clean": "rm -rf tmp/*.*",
    "==WATCHING==": " ",
    "watch": "run-s -l css:watch js:watch server:watch",
    "css:watch": " ",
    "js:watch": " ",
    "server:watch": " ",
    "==RUNNING==": " ",
    "start": "node server.js",
    "build:start": "run-s -l build start",
    "watch:start": "run-s -l watch start",
    "dev": "run-s -l reload build watch:start",
    "stop": "run-s -l db:stop stopSQL",
    "==TESTING==": " ",
    "test": "mocha test/[^_]*.js --bail",
    "mocha": "mocha",
    "test:grep": "mocha --grep",
    "bin": "ls ./node_modules/.bin/",
    "==MONGODB==": " ",
    "db:create": " ",
    "db:import": "mongoimport -d $npm_package_config_db_database -c $npm_package_config_db_collection --file ",
    "db:seed": "mongoimport -d $npm_package_config_db_database -c $npm_package_config_db_collection --file $npm_package_config_db_seed",
    "db:drop": "mongo legislators_development --eval 'db.dropDatabase()'",
    "db:reload": "run-s -l db:drop db:seed",
    "db:export": " ",
    "db:start": " ",
    "db:stop": " ",
    "db:destroy": " ",
    "==MYSQL==": " ",
    "sql:create": "echo \"CREATE DATABASE IF NOT EXISTS $npm_package_config_sql_database\" | mysql --defaults-extra-file=/vagrant/my.cnf",
    "sql:seed": "mysql --defaults-extra-file=/vagrant/my.cnf $npm_package_config_sql_database < $npm_package_config_sql_seed",
    "sql:reseed": "run-s -l sql:empty sql:seed",
    "sql:empty": "mysqldump --defaults-extra-file=/vagrant/my.cnf --add-drop-table --no-data $npm_package_config_sql_database | grep ^DROP | mysql --defaults-extra-file=/vagrant/my.cnf $npm_package_config_sql_database",
    "sql:drop": "echo \"DROP DATABASE IF EXISTS $npm_package_config_sql_database\" | mysql --defaults-extra-file=/vagrant/my.cnf",
    "sql:load": "run-s -l sql:create sql:seed",
    "sql:reload": "run-s -l sql:drop sql:load",
    "sql:export": " ",
    "sql:start": " ",
    "sql:stop": " ",
    "sql:destroy": " ",
    "==UNINSTALL==": " ",
    "uninstall": "run-s -l db:destroy sql:destroy clean",
    "==LOGS==": " ",
    "log:init": "sh scripts/log.sh",
    "log:init:apache_access": "sh scripts/log.sh logs/apache_access.log 'Apache access log'",
    "log:init:apache_errors": "sh scripts/log.sh logs/apache_errors.log 'Apache error log'",
    "log:init:php_errors": "sh scripts/log.sh logs/php_errors.log 'PHP error log'",
    "==OTHER==": " ",        
    "cron": "sh scripts/cron.sh",
    "archive": "node scripts/archive.js"
  },
  "config": {
    "submodule": {
      "repo": "git@github.com:dylanized/foo.git",
      "folder": "foo",
      "git": "foo/.git"
    },
    "db": {
      "database": "exampleDatabase",
      "collection": "exampleCollection",
      "seed": "/files/seed.json"
    },
    "sql": {
      "host": "localhost",
      "user": "root",
      "password": "root",
      "database": "database_name",
      "seed": "/files/seed.sql"
    }
  }
}
